---
layout: default
img: gui_start.jpg
category: Services
title: Welcome
description: |
---

[River Architect](https://github.com/RiverArchitect/Media/raw/master/docs/RiverArchitect.pdf) is a Python3-based open-source code that supports river designers with a set of GUI modules. Sample data can be downloaded [here](https://github.com/RiverArchitect/SampleData/archive/master.zip). The core functionalities are:

 * Lifespan mapping of stream design features according to [Schwindt et al. (2019)][1] with the [LifespanDesign](https://riverarchitect.github.io/RA_wiki/LifespanDesign) and [MaxLifespan](https://riverarchitect.github.io/RA_wiki/MaxLifespan) modules.   

 * Terraforming concepts with the [ModifyTerrain](https://riverarchitect.github.io/RA_wiki/wiki/ModifyTerrain) module using threshold value-based DEM modifications or the sophisticated [River Builder](https://riverarchitect.github.io/RA_wiki/RiverBuilder).

 * Evaluate ecohydraulic and morphological site and river assets within the Eco-Morphology modules for [calculating Seasonal Habitat Area](https://riverarchitect.github.io/RA_wiki/SHArC) and optimizing [habitat connectivity](https://riverarchitect.github.io/RA_wiki/Connectivity).

 * Generate construction plans, cost estimates, and variant efficiency metrics with the [ProjectMaker](https://riverarchitect.github.io/RA_wiki/ProjectMaker) module.

 * Produce high-quality maps with *River Architect*'s built-in [Mapping routines](https://riverarchitect.github.io/RA_wiki/Mapping).



# Requirements

***

 * Digital terrain elevation models (DEMs).
 * 2D hydrodynamic modeling of multiple steady flow scenarios.
 * Esri's *ArcGIS Pro* *Python* environment with *SpatialAnalyst* license (Windows only).


# Installation and Quick Usage (short version)

***

The quick version: Download [River Architect][5], unzip the downloaded files, and double-click on [Start_River_Architect.bat][1]. Modifications of the batchfile might be required, for example, to fit the conda environment. The standard environment is `"%PROGRAMFILES%\ArcGIS\Pro\bin\Python\Scripts\propy"`, which typically refers to `"C:\Program Files\ArcGIS\Pro\bin\Python\scripts\propy.bat"`. ArcGIS provides more information on running stand-alone Python scripts on their [website](https://pro.arcgis.com/en/pro-app/arcpy/get-started/using-conda-with-arcgis-pro.htm).

The robust version: **Follow the [Wiki](https://riverarchitect.github.io/RA_wiki/Installation#started)'s detailed instructions for [installing](https://riverarchitect.github.io/RA_wiki/Installation#git_install_ra), [updating](https://riverarchitect.github.io/RA_wiki/Installation#update_ra), and [launching](https://riverarchitect.github.io/RA_wiki/Installation#launch_ra) *River Architect*.**



# Documentation

***

An overview presentation can be downloaded [here](https://github.com/RiverArchitect/Media/raw/master/docs/RiverArchitect.pdf). The usage of River Architect is described in the [*River Architect*'s Wiki][3]. [*River Architect*'s' Wiki](https://riverarchitect.github.io/RA_wiki/main_page) also provides detailed solutions for [Troubleshooting](https://riverarchitect.github.io/RA_wiki/Troubleshooting).


# About

***

The code was developed based on data from California's Yuba River and example results can be downloaded.

Read the Wiki's [Signposts][7] to learn about the terminology used in *River Architect* and create river [*Conditions*](https://riverarchitect.github.io/RA_wiki/Signposts#new-condition) with the [GetStarted](https://riverarchitect.github.io/RA_wiki/Signposts#getstarted) module to start analyses. 

*River Architect* comes with the following modules: 
 - Lifespan mapping: 
   	+ [Lifespan and Design](https://riverarchitect.github.io/RA_wiki/LifespanDesign) map creation
      	+ [Best Lifespan](https://riverarchitect.github.io/RA_wiki/MaxLifespan) identification
 - Morphology and Terraforming: 
   	+ [Modify Terrain](https://riverarchitect.github.io/RA_wiki/ModifyTerrain) with thresholds or [RiverBuilder](http://pasternack.ucdavis.edu/research/model-codes/river-builder)
      	+ [Volume Assessment](https://riverarchitect.github.io/RA_wiki/VolumeAssessment) of terraforming (earthworks)
 - Ecohydraulics: 
   	+ [Seasonal Habitat Area Calcluator](https://riverarchitect.github.io/RA_wiki/SHArC) (SHArC)
      	+ Habitat [Connectivity](https://riverarchitect.github.io/RA_wiki/Connectivity) Analyses
 - [Project Maker](https://riverarchitect.github.io/RA_wiki/ProjectMaker) for cost-benefit analysis.

Please note that *River Architect* has undergone important changes since the release of the  last stable Python2 version ([download last stable Python2-River-Architect][8]).

Future developments will focus on improving the GUIs, developing the ModifyTerrain module for automating terraforming planning, and migrating to QGIS's Python core.


# Contributing

***

Do not hesitate to contact river.architect.program [at] gmail.com for reporting bugs, suggestions, or any feedback.

Bug reports, feature requests and pull requests are welcome ([submit here](https://github.com/RiverArchitect/Media).



[1]: https://www.sciencedirect.com/science/article/pii/S0301479718312751 "Lifespan mapping"
[2]: https://github.com/riverarchitect/program
[3]: https://riverarchitect.github.io/RA_wiki/
[4]: https://github.com/RiverArchitect/SampleData/archive/master.zip
[5]: https://github.com/riverarchitect/program/archive/master.zip
[6]: https://riverarchitect.github.io/RA_wiki/Installation
[7]: https://riverarchitect.github.io/RA_wiki/Signposts
[8]: https://www.dropbox.com/s/8d6c096r4ouzxy2/RiverArchitect_Py2.zip?dl=0

